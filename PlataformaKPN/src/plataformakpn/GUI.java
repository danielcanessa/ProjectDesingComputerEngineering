/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package plataformakpn;

import JConnector.ConnectLine;
import JConnector.ConnectorContainer;
import JConnector.ConnectorPropertiesPanel;
import JConnector.DraggableLabel;
import JConnector.JConnector;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Window;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.List;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JWindow;
import javax.swing.SwingUtilities;
import javax.swing.border.EtchedBorder;

/**
 *
 * @author Daniel
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public static boolean relations; //to fix
    public static List<HardwareModel> hardwareList;
    public static JLabel selectedJLabel;
    public static boolean repaint;
    GUIActions GUIActions;

    public GUI() {

        initComponents();

        initGlobalValues();

        hardwareList = new ArrayList<>();

        /*    this.jPanelBoard.add(initConnectors(),
                             new GridBagConstraints(0, 0, 1, 1, 1, 1, GridBagConstraints.NORTHWEST, GridBagConstraints.BOTH, new Insets(5, 5, 5, 5), 0, 0));
      
         */
    }

    //http://java-sl.com/connector.html
    /* protected ConnectorContainer initConnectors() {
        JLabel b1 = new DraggableLabel("Source 1");
        b1.setBounds(10, 10, 100, 50);
        JLabel b2 = new DraggableLabel("Dest 1");
        b2.setBounds(200, 20, 100, 50);

        JConnector[] connectors = new JConnector[2];
//        JLabel b3=new DraggableLabel("Source 2");
//        b3.setBounds(200,500,100,25);
//        JLabel b4=new DraggableLabel("Dest 2");
//        b4.setBounds(400,300,100,25);
        connectors[0] = new JConnector(b1, b2, ConnectLine.LINE_ARROW_DEST, JConnector.CONNECT_LINE_TYPE_RECTANGULAR, Color.black);
        //      props = new ConnectorPropertiesPanel(connectors[0]);
//        connectors[1]=new JConnector(b3, b4, ConnectLine.LINE_ARROW_DEST, Color.blue);
        ConnectorContainer cc = new ConnectorContainer(connectors);
        //cc.setLayout(null);

        cc.add(b1);
        cc.add(b2);
        //cc.add(b3);
//        cc.add(b4);

       

        cc.setBorder(new EtchedBorder(EtchedBorder.LOWERED));

        //this.jPanel_Main.add(cc);

          
    
      //  this.jPanel_Main.add(b1);
      //  this.jPanel_Main.add(b2);

          return cc;
    }*/
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel_Main = new javax.swing.JPanel();
        jPanelBoard = new javax.swing.JPanel();
        jButtonAdd = new javax.swing.JButton();
        jButtonRelations = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel_Main.setBackground(new java.awt.Color(255, 255, 255));

        jPanelBoard.setBackground(new java.awt.Color(255, 255, 255));
        jPanelBoard.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelBoard.setLayout(new java.awt.GridBagLayout());

        jButtonAdd.setBackground(new java.awt.Color(255, 255, 255));
        jButtonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add.png"))); // NOI18N
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonRelations.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/union.png"))); // NOI18N
        jButtonRelations.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRelationsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_MainLayout = new javax.swing.GroupLayout(jPanel_Main);
        jPanel_Main.setLayout(jPanel_MainLayout);
        jPanel_MainLayout.setHorizontalGroup(
            jPanel_MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel_MainLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jPanelBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 1053, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel_MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonRelations, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(49, 49, 49))
        );
        jPanel_MainLayout.setVerticalGroup(
            jPanel_MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_MainLayout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addGroup(jPanel_MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_MainLayout.createSequentialGroup()
                        .addComponent(jButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonRelations, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanelBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getContentPane().add(jPanel_Main, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 1180, 570));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void paintHardware() {
        this.jPanelBoard.removeAll();
        this.jPanelBoard.validate();

        JConnector[] connectors = new JConnector[GUI.hardwareList.size() + 1];

        JLabel newLabel = new DraggableLabel("Label: " + (GUI.hardwareList.size() + 1));

        newLabel.setBounds(0, 0, 100, 50);

        HardwareModel model = new HardwareModel();
        model.setX(0);
        model.setY(0);
        model.setLabel(newLabel);
        model.setInput(null);
        model.setOutput1(null);
        model.setOutput2(null);

        hardwareList.add(model);

        int index = 0;

        for (int i = 0; i < hardwareList.size(); i++) {

            if (hardwareList.get(i).getOutput1() != null) {
                System.out.println("entre: " + index);
                connectors[index] = new JConnector(hardwareList.get(i).getLabel(), hardwareList.get(i).getOutput1(), ConnectLine.LINE_ARROW_SOURCE, JConnector.CONNECT_LINE_TYPE_RECTANGULAR, Color.red);
                index++;
            }

        }

        ConnectorContainer conectorContainer = new ConnectorContainer(connectors);

        conectorContainer.setLayout(null);

        for (int i = 0; i < hardwareList.size(); i++) {

            conectorContainer.add(hardwareList.get(i).getLabel());

        }

        conectorContainer.setBorder(new EtchedBorder(EtchedBorder.LOWERED));

        this.jPanelBoard.add(conectorContainer,
                new GridBagConstraints(0, 1, 1, 1, 1, 1, GridBagConstraints.NORTHWEST, GridBagConstraints.BOTH, new Insets(5, 5, 5, 5), 0, 0));

        this.jPanelBoard.validate();
        this.jPanelBoard.repaint();

        this.jPanel_Main.validate();
        this.jPanel_Main.repaint();
    }

    private void repaintHardware() {
        this.jPanelBoard.removeAll();
        this.jPanelBoard.validate();

        JConnector[] connectors = new JConnector[GUI.hardwareList.size() + 1];

        int index = 0;

        for (int i = 0; i < hardwareList.size(); i++) {

            if (hardwareList.get(i).getOutput1() != null) {
                connectors[index] = new JConnector(hardwareList.get(i).getLabel(), hardwareList.get(i).getOutput1(), ConnectLine.LINE_ARROW_SOURCE, JConnector.CONNECT_LINE_TYPE_RECTANGULAR, Color.red);
                index++;
            }

        }

        ConnectorContainer conectorContainer = new ConnectorContainer(connectors);

        conectorContainer.setLayout(null);

        for (int i = 0; i < hardwareList.size(); i++) {

            conectorContainer.add(hardwareList.get(i).getLabel());

        }

        conectorContainer.setBorder(new EtchedBorder(EtchedBorder.LOWERED));

        this.jPanelBoard.add(conectorContainer,
                new GridBagConstraints(0, 1, 1, 1, 1, 1, GridBagConstraints.NORTHWEST, GridBagConstraints.BOTH, new Insets(5, 5, 5, 5), 0, 0));

        this.jPanelBoard.validate();
        this.jPanelBoard.repaint();

        this.jPanel_Main.validate();
        this.jPanel_Main.repaint();
    }

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed

        paintHardware();
        //label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add.png")));
        //label.setBounds(0, 0, 64, 64); //64x64


        /*   JConnector[] connectors = new JConnector[2];
      
        JLabel b1 = new DraggableLabel("Source 1");
        b1.setBounds(10, 10, 100, 50);
        JLabel b2 = new DraggableLabel("Dest 1");
        b2.setBounds(200, 20, 100, 50);
        JLabel b3=new DraggableLabel("Source 2");
         b3.setBounds(200,300,100,25);
        JLabel b4=new DraggableLabel("Dest 2");
        b4.setBounds(100,100,100,25);
        
        HardwareModel model = new HardwareModel();
        model.setX(10);
        model.setY(10);
        model.setLabel(b1);
        
        HardwareModel model2 = new HardwareModel();
        model2.setX(200);
        model2.setY(20);
        model2.setLabel(b2);
        
        HardwareModel model3 = new HardwareModel();
        model3.setX(200);
        model3.setY(300);
        model3.setLabel(b3);
        
        HardwareModel model4 = new HardwareModel();
        model4.setX(100);
        model4.setY(100);
        model4.setLabel(b4);
        
        GUI.hardwareList.add(model);
        GUI.hardwareList.add(model2);
        GUI.hardwareList.add(model3);
        GUI.hardwareList.add(model4);
        
        
        
        
        connectors[0] = new JConnector(hardwareList.get(0).getLabel(), hardwareList.get(1).getLabel(), ConnectLine.LINE_ARROW_SOURCE, JConnector.CONNECT_LINE_TYPE_RECTANGULAR, Color.red);
       
        connectors[1]=new JConnector(hardwareList.get(2).getLabel(), hardwareList.get(3).getLabel(), ConnectLine.LINE_ARROW_DEST, Color.blue);
      
        ConnectorContainer cc = new ConnectorContainer(connectors);
        cc.setLayout(null);

        cc.add(hardwareList.get(0).getLabel());
        cc.add(hardwareList.get(1).getLabel());
        cc.add(hardwareList.get(2).getLabel());
        cc.add(hardwareList.get(3).getLabel());

        cc.setBorder(new EtchedBorder(EtchedBorder.LOWERED));
        
        this.jPanelBoard.add(cc,
                new GridBagConstraints(0, 1, 1, 1, 1, 1, GridBagConstraints.NORTHWEST, GridBagConstraints.BOTH, new Insets(5, 5, 5, 5), 0, 0));

          this.jPanelBoard.validate();
        this.jPanelBoard.repaint();
        
        this.jPanel_Main.validate();
        this.jPanel_Main.repaint();
         */

    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonRelationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRelationsActionPerformed
        selectedJLabel = null;
        relations = !relations;

        System.out.println("El estado de relations: " + relations);
    }//GEN-LAST:event_jButtonRelationsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonRelations;
    private javax.swing.JPanel jPanelBoard;
    private javax.swing.JPanel jPanel_Main;
    // End of variables declaration//GEN-END:variables

    private void initGlobalValues() {
        relations = false;
        GUIActions = new GUIActions();
        GUIActions.start();

    }

    private class GUIActions extends Thread {

        @Override
        public void run() {
            while (true) {
                if (GUI.repaint) {                    
                    repaintHardware();
                    GUI.repaint = false;

                }
                try {
                    Thread.sleep(100);
                } catch (InterruptedException ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }
}
